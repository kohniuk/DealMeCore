// <auto-generated />
using System;
using DealMeCore.DB.Infrastructure;
using GeoAPI.Geometries;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DealMeCore.DB.Infrastructure.Migrations
{
    [DbContext(typeof(DealMeCoreDbContext))]
    [Migration("20190401214942_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DealMeCore.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<bool?>("Disabled");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id")
                        .HasName("PK_BRANDS");

                    b.HasIndex("Name")
                        .HasName("IX_NAME");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("DealMeCore.Domain.Entities.Deal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BrandId");

                    b.Property<string>("BuyNowUrl")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("CouponCode");

                    b.Property<string>("Currency");

                    b.Property<byte>("DealType");

                    b.Property<DateTime>("DealValidFrom");

                    b.Property<DateTime>("DealValidTo");

                    b.Property<byte>("Gender");

                    b.Property<bool>("IsActive");

                    b.Property<string>("MarketUrl")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("OriginalPrice");

                    b.Property<string>("Price");

                    b.HasKey("Id")
                        .HasName("PK_DEALS");

                    b.HasIndex("BrandId");

                    b.ToTable("Deals");
                });

            modelBuilder.Entity("DealMeCore.Domain.Entities.DealImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("DealId");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.HasKey("Id")
                        .HasName("PK_DEALIMAGES");

                    b.HasIndex("DealId");

                    b.ToTable("DealImages");
                });

            modelBuilder.Entity("DealMeCore.Domain.Entities.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.Property<Guid>("BrandId");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsDisabled");

                    b.Property<IPoint>("Location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id")
                        .HasName("PK_STORES");

                    b.HasIndex("BrandId");

                    b.HasIndex("Name")
                        .HasName("IX_NAME");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("DealMeCore.Domain.Entities.Deal", b =>
                {
                    b.HasOne("DealMeCore.Domain.Entities.Brand")
                        .WithMany("Deals")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DealMeCore.Domain.Entities.DealImage", b =>
                {
                    b.HasOne("DealMeCore.Domain.Entities.Deal")
                        .WithMany("Images")
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DealMeCore.Domain.Entities.Store", b =>
                {
                    b.HasOne("DealMeCore.Domain.Entities.Brand")
                        .WithMany("Stores")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
